// <auto-generated />
using System;
using ChatQueueSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatQueueSystem.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20250828172233_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentChats")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Seniority")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.ChatSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignedAgentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AssignedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastPollTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PollMissCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.HasIndex("TeamId");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOverflow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.Agent", b =>
                {
                    b.HasOne("ChatQueueSystem.Domain.Entities.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.ChatSession", b =>
                {
                    b.HasOne("ChatQueueSystem.Domain.Entities.Agent", "AssignedAgent")
                        .WithMany()
                        .HasForeignKey("AssignedAgentId");

                    b.HasOne("ChatQueueSystem.Domain.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("AssignedAgent");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ChatQueueSystem.Domain.Entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
